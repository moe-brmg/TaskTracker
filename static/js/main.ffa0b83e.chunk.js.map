{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","showAdd","showTask","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","Math","floor","random","console","log","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setShowTask","setTasks","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffa0b83e.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      className='btn'\r\n      style={{ backgroundColor: color }}\r\n      onClick={onClick}\r\n    >\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n\r\nButton.defaultProps = {\r\n  text: \"Add\",\r\n  color: \"Black\",\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n}\r\n","import Button from \"./Button\"\r\n\r\nconst Header = ({ title, showAdd, showTask }) => {\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      <Button\r\n        onClick={showAdd}\r\n        color={showTask ? \"black\" : \"red\"}\r\n        text={showTask ? \"Close\" : \"Add\"}\r\n      />\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: \"Task Tracker\",\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from \"react-icons/fa\"\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p> {task.day} </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => {\r\n        return (\r\n          <Task\r\n            key={task.id}\r\n            task={task}\r\n            onDelete={onDelete}\r\n            onToggle={onToggle}\r\n          />\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\"\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\")\r\n  const [day, setDay] = useState(\"\")\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n      alert(\"please add task\")\r\n      return\r\n    }\r\n    const id = Math.floor(Math.random() * 10000 + 1)\r\n    console.log(id)\r\n    onAdd({ id, text, day, reminder })\r\n\r\n    setText(\"\")\r\n    setDay(\"\")\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label> Task </label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label> Day & time </label>\r\n        <input\r\n          type='text'\r\n          placeholder='Day & time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label> Set Reminder </label>\r\n        <input\r\n          type='checkbox'\r\n          placeholder='Set Reminder'\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type='submit' value='save' className='btn btn-block' />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from \"react\"\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\n\nconst App = () => {\n  const [showTask, setShowTask] = useState(true)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors apointment\",\n      day: \"Feb 15th at 2:15pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Meeting\",\n      day: \"March 10th at 10:15am\",\n      reminder: true,\n    },\n  ])\n\n  const addTask = (task) => {\n    console.log(task)\n    setTasks([...tasks, task])\n  }\n\n  const DeleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) => {\n        return task.id === id ? { ...task, reminder: !task.reminder } : task\n      }),\n    )\n  }\n  const toggleShowTask = () => {\n    setShowTask(!showTask)\n  }\n\n  return (\n    <div className='container'>\n      <Header showAdd={toggleShowTask} showTask={showTask} />\n      {showTask ? <AddTask onAdd={addTask} /> : \"\"}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={DeleteTask} onToggle={toggleReminder} />\n      ) : (\n        <p> No tasks to show</p>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}